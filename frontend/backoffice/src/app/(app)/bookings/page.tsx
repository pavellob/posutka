'use client'

import { useState, useEffect } from 'react'
import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query'
import { Heading } from '@/components/heading'
import { Text } from '@/components/text'
import { Badge } from '@/components/badge'
import { Button } from '@/components/button'
import { Dialog } from '@/components/dialog'
import { Input } from '@/components/input'
import { Select } from '@/components/select'
import { Textarea } from '@/components/textarea'
import { Table, TableHead, TableBody, TableRow, TableHeader, TableCell } from '@/components/table'
import { Fieldset, Field, Label } from '@/components/fieldset'
import { Combobox, ComboboxOption, ComboboxLabel } from '@/components/combobox'
import { GET_BOOKINGS, CREATE_BOOKING, CANCEL_BOOKING, GET_PROPERTIES_BY_ORG, GET_UNITS_BY_PROPERTY } from '@/lib/graphql-queries'
import { graphqlClient } from '@/lib/graphql-client'
import { useCurrentOrganization } from '@/hooks/useCurrentOrganization'
import { useSelectedOrganization } from '@/hooks/useSelectedOrganization'
import type { 
  GetBookingsQuery, 
  GetPropertiesByOrgQuery, 
  GetUnitsByPropertyQuery,
  CreateBookingMutation,
  CancelBookingMutation
} from '@/lib/generated/graphql'
// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ–Ω–µ–≥
function formatMoney(amount: number, currency: string): string {
  const value = amount / 100 // –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∏–∑ –∫–æ–ø–µ–µ–∫ –≤ —Ä—É–±–ª–∏/–¥–æ–ª–ª–∞—Ä—ã
  
  const formatter = new Intl.NumberFormat('ru-RU', {
    style: 'currency',
    currency: currency,
    minimumFractionDigits: 0,
    maximumFractionDigits: 2,
  })
  
  return formatter.format(value)
}

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–∏–ø—ã
type Booking = NonNullable<GetBookingsQuery['bookings']['edges'][0]>['node']
type Property = NonNullable<GetPropertiesByOrgQuery['propertiesByOrgId'][0]>
type Unit = NonNullable<GetUnitsByPropertyQuery['unitsByPropertyId'][0]>

export default function BookingsPage() {
  const [showCreateDialog, setShowCreateDialog] = useState(false)
  const [selectedProperty, setSelectedProperty] = useState('')
  const [selectedUnit, setSelectedUnit] = useState('')
  const [createFormData, setCreateFormData] = useState({
    guestName: '',
    guestEmail: '',
    guestPhone: '',
    checkIn: '',
    checkOut: '',
    guestsCount: 1,
    basePrice: 0,
    notes: ''
  })
  
  // –§–∏–ª—å—Ç—Ä—ã –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
  const [filters, setFilters] = useState({
    status: '',
    property: '',
    guest: ''
  })

  
  // –ö–ª—é—á –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  const [componentKey, setComponentKey] = useState(0)
  
  const queryClient = useQueryClient()

  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const { currentOrganization, currentOrgId, isLoading: orgLoading } = useCurrentOrganization()
  const { getSelectedOrgId, selectedOrg } = useSelectedOrganization()
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –∏–∑ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞, –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ —Ç–µ–∫—É—â—É—é
  const selectedOrgId = getSelectedOrgId()
  const orgId = selectedOrgId || currentOrgId
  
  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ selectedOrgId
  const [prevSelectedOrgId, setPrevSelectedOrgId] = useState<string | null>(null)
  
  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  console.log('üîç BookingsPage Debug:', {
    selectedOrgId,
    currentOrgId,
    orgId,
    selectedOrg: selectedOrg?.name,
    componentKey,
    prevSelectedOrgId,
    hasSelectedOrgChanged: selectedOrgId !== prevSelectedOrgId
  })

  // –ó–∞–ø—Ä–æ—Å—ã –¥–∞–Ω–Ω—ã—Ö
  const { data: bookingsData, isLoading: bookingsLoading, refetch: refetchBookings } = useQuery<GetBookingsQuery>({
    queryKey: ['bookings', orgId],
    queryFn: () => {
      console.log('üîÑ Fetching bookings for orgId:', orgId)
      return graphqlClient.request(GET_BOOKINGS, { orgId })
    },
    enabled: !!orgId,
    refetchOnWindowFocus: false
  })

  const { data: propertiesData, refetch: refetchProperties } = useQuery<GetPropertiesByOrgQuery>({
    queryKey: ['properties', orgId],
    queryFn: () => {
      console.log('üîÑ Fetching properties for orgId:', orgId)
      return graphqlClient.request(GET_PROPERTIES_BY_ORG, { orgId })
    },
    enabled: !!orgId,
    refetchOnWindowFocus: false
  })

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ —Å–º–µ–Ω–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
  useEffect(() => {
    if (orgId) {
      console.log('üîÑ OrgId changed, invalidating queries:', orgId)
      queryClient.invalidateQueries({ queryKey: ['bookings'] })
      queryClient.invalidateQueries({ queryKey: ['properties'] })
      queryClient.invalidateQueries({ queryKey: ['units'] })
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –ø—Ä–∏ —Å–º–µ–Ω–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
      setSelectedProperty('')
      setSelectedUnit('')
    }
  }, [orgId, queryClient])


  // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ —Å–æ–±—ã—Ç–∏—è
  useEffect(() => {
    const handleOrganizationChange = (event: any) => {
      console.log('üîÑ Organization changed event:', event.detail)
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã
      queryClient.invalidateQueries({ queryKey: ['bookings'] })
      queryClient.invalidateQueries({ queryKey: ['properties'] })
      queryClient.invalidateQueries({ queryKey: ['units'] })
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
      setComponentKey(prev => prev + 1)
    }

    window.addEventListener('organizationChanged', handleOrganizationChange)
    return () => window.removeEventListener('organizationChanged', handleOrganizationChange)
  }, [queryClient])

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è selectedOrgId –∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
  useEffect(() => {
    if (selectedOrgId && selectedOrgId !== prevSelectedOrgId) {
      console.log('üîÑ SelectedOrgId changed from', prevSelectedOrgId, 'to', selectedOrgId)
      setPrevSelectedOrgId(selectedOrgId)
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã
      queryClient.invalidateQueries({ queryKey: ['bookings'] })
      queryClient.invalidateQueries({ queryKey: ['properties'] })
      queryClient.invalidateQueries({ queryKey: ['units'] })
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
      setSelectedProperty('')
      setSelectedUnit('')
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
      setComponentKey(prev => prev + 1)
    }
  }, [selectedOrgId, prevSelectedOrgId, queryClient])

  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–∏ —Ä–µ–Ω–¥–µ—Ä–µ (–±–µ–∑ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è)
  useEffect(() => {
    console.log('üîÑ Component rendered, orgId:', orgId, 'selectedOrgId:', selectedOrgId)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage –Ω–∞–ø—Ä—è–º—É—é
    const savedOrgId = localStorage.getItem('selectedOrganizationId')
    console.log('üîç Direct localStorage check:', { savedOrgId, selectedOrgId, orgId })
  })

  const { data: unitsData, isLoading: unitsLoading, error: unitsError } = useQuery<GetUnitsByPropertyQuery>({
    queryKey: ['units', selectedProperty],
    queryFn: () => {
      console.log('üîÑ Fetching units for property:', selectedProperty)
      return graphqlClient.request(GET_UNITS_BY_PROPERTY, { propertyId: selectedProperty })
    },
    enabled: !!selectedProperty,
    retry: 1
  })

  // –ú—É—Ç–∞—Ü–∏–∏
  const createBookingMutation = useMutation<CreateBookingMutation, Error, any>({
    mutationFn: (input: any) => graphqlClient.request(CREATE_BOOKING, { input }),
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ['bookings', orgId] })
      queryClient.invalidateQueries({ queryKey: ['properties', orgId] })
      setShowCreateDialog(false)
      resetCreateForm()
    }
  })

  const cancelBookingMutation = useMutation<CancelBookingMutation, Error, { id: string; reason?: string }>({
    mutationFn: ({ id, reason }: { id: string; reason?: string }) => 
      graphqlClient.request(CANCEL_BOOKING, { id, reason }),
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ['bookings', orgId] })
    }
  })

  const resetCreateForm = () => {
    setCreateFormData({
      guestName: '',
      guestEmail: '',
      guestPhone: '',
      checkIn: '',
      checkOut: '',
      guestsCount: 1,
      basePrice: 0,
      notes: ''
    })
    setSelectedProperty('')
    setSelectedUnit('')
  }

  const handleCreateBooking = async (e: React.FormEvent) => {
    e.preventDefault()
    
    if (!selectedUnit || !createFormData.guestName || !createFormData.guestEmail || !createFormData.checkIn || !createFormData.checkOut) {
      return
    }

    const input = {
      orgId,
      unitId: selectedUnit,
      guest: {
        name: createFormData.guestName,
        email: createFormData.guestEmail,
        phone: createFormData.guestPhone || undefined,
      },
      checkIn: createFormData.checkIn,
      checkOut: createFormData.checkOut,
      guestsCount: createFormData.guestsCount,
      priceBreakdown: {
        basePrice: {
          amount: createFormData.basePrice * 100, // –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –∫–æ–ø–µ–π–∫–∏
          currency: 'RUB'
        },
        total: {
          amount: createFormData.basePrice * 100,
          currency: 'RUB'
        }
      },
      notes: createFormData.notes || undefined,
      source: 'DIRECT'
    }

    createBookingMutation.mutate(input)
  }

  const allBookings = bookingsData?.bookings?.edges?.map(edge => edge.node) || []
  const properties = propertiesData?.propertiesByOrgId || []
  const units = (unitsData as any)?.unitsByPropertyId || []


  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –ø–µ—Ä–∏–æ–¥—É
  const bookingsInPeriod = allBookings

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –ø–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º
  const filteredBookings = bookingsInPeriod.filter(booking => {
    if (filters.status && booking.status !== filters.status) return false
    if (filters.property && booking.unit.property.id !== filters.property) return false
    if (filters.guest && !booking.guest.name.toLowerCase().includes(filters.guest.toLowerCase()) && 
        !booking.guest.email.toLowerCase().includes(filters.guest.toLowerCase())) return false
    return true
  })

  const bookings = filteredBookings

  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  console.log('üîç Bookings Page Debug:', {
    orgId,
    selectedProperty,
    propertiesCount: properties.length,
    unitsCount: units.length,
    properties,
    units,
    unitsLoading,
    allBookingsCount: allBookings.length,
    filteredBookingsCount: filteredBookings.length
  })

  // –ü–æ–¥—Å—á–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  const totalBookings = bookings.length
  const activeBookings = bookings.filter(b => b.status === 'CONFIRMED').length
  const completedBookings = bookings.filter(b => b.status === 'COMPLETED').length
  const futureBookings = bookings.filter(b => {
    const checkIn = new Date(b.checkIn)
    const now = new Date()
    return checkIn > now && b.status === 'CONFIRMED'
  }).length
  const cancelledBookings = bookings.filter(b => b.status === 'CANCELLED').length

  // –ü–æ–¥—Å—á–µ—Ç —Å—É–º–º
  const totalRevenue = bookings.reduce((sum, booking) => sum + booking.priceBreakdown.total.amount, 0)
  const activeRevenue = bookings.filter(b => b.status === 'CONFIRMED').reduce((sum, booking) => sum + booking.priceBreakdown.total.amount, 0)
  const completedRevenue = bookings.filter(b => b.status === 'COMPLETED').reduce((sum, booking) => sum + booking.priceBreakdown.total.amount, 0)
  const futureRevenue = bookings.filter(b => {
    const checkIn = new Date(b.checkIn)
    const now = new Date()
    return checkIn > now && b.status === 'CONFIRMED'
  }).reduce((sum, booking) => sum + booking.priceBreakdown.total.amount, 0)

  // –ü–æ–¥—Å—á–µ—Ç –≥–æ—Å—Ç–µ–π
  const totalGuests = bookings.reduce((sum, booking) => sum + booking.guestsCount, 0)
  const activeGuests = bookings.filter(b => b.status === 'CONFIRMED').reduce((sum, booking) => sum + booking.guestsCount, 0)
  const completedGuests = bookings.filter(b => b.status === 'COMPLETED').reduce((sum, booking) => sum + booking.guestsCount, 0)
  const futureGuests = bookings.filter(b => {
    const checkIn = new Date(b.checkIn)
    const now = new Date()
    return checkIn > now && b.status === 'CONFIRMED'
  }).reduce((sum, booking) => sum + booking.guestsCount, 0)

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'CONFIRMED': return 'green'
      case 'PENDING': return 'orange'
      case 'CANCELLED': return 'red'
      case 'COMPLETED': return 'blue'
      case 'NO_SHOW': return 'gray'
      default: return 'gray'
    }
  }

  const getStatusLabel = (status: string) => {
    switch (status) {
      case 'CONFIRMED': return '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ'
      case 'PENDING': return '–û–∂–∏–¥–∞–µ—Ç'
      case 'CANCELLED': return '–û—Ç–º–µ–Ω–µ–Ω–æ'
      case 'COMPLETED': return '–ó–∞–≤–µ—Ä—à–µ–Ω–æ'
      case 'NO_SHOW': return '–ù–µ —è–≤–∏–ª—Å—è'
      default: return status
    }
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –µ—Å–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞
  if (orgLoading || !orgId) {
    return (
      <div className="space-y-6">
        <div>
          <Heading level={1}>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏</Heading>
          <Text className="mt-2 text-zinc-600 dark:text-zinc-400">
            –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏...
          </Text>
        </div>
      </div>
    )
  }

  return (
    <div key={componentKey} className="space-y-6">
      <div className="flex justify-between items-center">
        <div>
          <Heading level={1}>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏</Heading>
          <Text className="mt-2 text-zinc-600 dark:text-zinc-400">
            –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏, –∑–∞–∫–∞–∑–∞–º–∏ –∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è–º–∏
          </Text>
        </div>
        <Button onClick={() => setShowCreateDialog(true)}>
          –°–æ–∑–¥–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
        </Button>
      </div>


      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        {/* –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π */}
        <div className="bg-white dark:bg-zinc-800 rounded-lg border border-zinc-200 dark:border-zinc-700 p-6">
          <div className="flex items-center justify-between">
            <div>
              <Text className="text-sm font-medium text-zinc-600 dark:text-zinc-400">–í—Å–µ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π</Text>
              <Text className="text-2xl font-bold text-zinc-900 dark:text-white">
                {totalBookings.toLocaleString()}
              </Text>
              <Text className="text-xs text-zinc-500 mt-1">
                –°—É–º–º–∞: {formatMoney(totalRevenue, 'RUB')}
              </Text>
              <Text className="text-xs text-zinc-500">
                –ì–æ—Å—Ç–µ–π: {totalGuests}
              </Text>
            </div>
          </div>
        </div>

        {/* –ê–∫—Ç–∏–≤–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è */}
        <div className="bg-white dark:bg-zinc-800 rounded-lg border border-zinc-200 dark:border-zinc-700 p-6">
          <div className="flex items-center justify-between">
            <div>
              <Text className="text-sm font-medium text-zinc-600 dark:text-zinc-400">–ê–∫—Ç–∏–≤–Ω—ã–µ</Text>
              <Text className="text-2xl font-bold text-zinc-900 dark:text-white">
                {activeBookings.toLocaleString()}
              </Text>
              <Text className="text-xs text-zinc-500 mt-1">
                –°—É–º–º–∞: {formatMoney(activeRevenue, 'RUB')}
              </Text>
              <Text className="text-xs text-zinc-500">
                –ì–æ—Å—Ç–µ–π: {activeGuests}
              </Text>
            </div>
          </div>
        </div>

        {/* –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è */}
        <div className="bg-white dark:bg-zinc-800 rounded-lg border border-zinc-200 dark:border-zinc-700 p-6">
          <div className="flex items-center justify-between">
            <div>
              <Text className="text-sm font-medium text-zinc-600 dark:text-zinc-400">–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ</Text>
              <Text className="text-2xl font-bold text-zinc-900 dark:text-white">
                {completedBookings.toLocaleString()}
              </Text>
              <Text className="text-xs text-zinc-500 mt-1">
                –°—É–º–º–∞: {formatMoney(completedRevenue, 'RUB')}
              </Text>
              <Text className="text-xs text-zinc-500">
                –ì–æ—Å—Ç–µ–π: {completedGuests}
              </Text>
            </div>
          </div>
        </div>

        {/* –ë—É–¥—É—â–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è */}
        <div className="bg-white dark:bg-zinc-800 rounded-lg border border-zinc-200 dark:border-zinc-700 p-6">
          <div className="flex items-center justify-between">
            <div>
              <Text className="text-sm font-medium text-zinc-600 dark:text-zinc-400">–ë—É–¥—É—â–∏–µ</Text>
              <Text className="text-2xl font-bold text-zinc-900 dark:text-white">
                {futureBookings.toLocaleString()}
              </Text>
              <Text className="text-xs text-zinc-500 mt-1">
                –°—É–º–º–∞: {formatMoney(futureRevenue, 'RUB')}
              </Text>
              <Text className="text-xs text-zinc-500">
                –ì–æ—Å—Ç–µ–π: {futureGuests}
              </Text>
            </div>
          </div>
        </div>
      </div>

      {/* –§–∏–ª—å—Ç—Ä—ã */}
      <div className="bg-white dark:bg-zinc-800 rounded-lg border border-zinc-200 dark:border-zinc-700 p-6">
        <Heading level={2} className="mb-4">–§–∏–ª—å—Ç—Ä—ã</Heading>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          <Field>
            <Label>–°—Ç–∞—Ç—É—Å</Label>
            <Combobox
              value={filters.status}
              onChange={(value) => setFilters(prev => ({ ...prev, status: value || '' }))}
              options={['', 'CONFIRMED', 'PENDING', 'CANCELLED', 'COMPLETED', 'NO_SHOW']}
              displayValue={(value) => {
                if (!value) return '–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã'
                switch (value) {
                  case 'CONFIRMED': return '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ'
                  case 'PENDING': return '–û–∂–∏–¥–∞–µ—Ç'
                  case 'CANCELLED': return '–û—Ç–º–µ–Ω–µ–Ω–æ'
                  case 'COMPLETED': return '–ó–∞–≤–µ—Ä—à–µ–Ω–æ'
                  case 'NO_SHOW': return '–ù–µ —è–≤–∏–ª—Å—è'
                  default: return value
                }
              }}
            >
              {(option) => (
                <ComboboxOption value={option}>
                  <ComboboxLabel>
                    {option === '' ? '–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã' : 
                     option === 'CONFIRMED' ? '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ' :
                     option === 'PENDING' ? '–û–∂–∏–¥–∞–µ—Ç' :
                     option === 'CANCELLED' ? '–û—Ç–º–µ–Ω–µ–Ω–æ' :
                     option === 'COMPLETED' ? '–ó–∞–≤–µ—Ä—à–µ–Ω–æ' :
                     option === 'NO_SHOW' ? '–ù–µ —è–≤–∏–ª—Å—è' : option}
                  </ComboboxLabel>
                </ComboboxOption>
              )}
            </Combobox>
          </Field>

          <Field>
            <Label>–û–±—ä–µ–∫—Ç</Label>
            <Combobox
              value={filters.property}
              onChange={(value) => setFilters(prev => ({ ...prev, property: value || '' }))}
              options={['', ...properties.map(p => p?.id || '').filter(Boolean)]}
              displayValue={(value) => {
                if (!value) return '–í—Å–µ –æ–±—ä–µ–∫—Ç—ã'
                const property = properties.find(p => p?.id === value)
                return property?.title || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç'
              }}
            >
              {(option) => (
                <ComboboxOption value={option}>
                  <ComboboxLabel>
                    {option === '' ? '–í—Å–µ –æ–±—ä–µ–∫—Ç—ã' : 
                     properties.find(p => p?.id === option)?.title || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç'}
                  </ComboboxLabel>
                </ComboboxOption>
              )}
            </Combobox>
          </Field>

          <Field>
            <Label>–ì–æ—Å—Ç—å</Label>
            <Input
              type="text"
              placeholder="–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ email"
              value={filters.guest}
              onChange={(e) => setFilters(prev => ({ ...prev, guest: e.target.value }))}
            />
          </Field>
        </div>
      </div>

      {/* –¢–∞–±–ª–∏—Ü–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π */}
      <div className="bg-white dark:bg-zinc-800 rounded-lg border border-zinc-200 dark:border-zinc-700">
        <div className="p-6 border-b border-zinc-200 dark:border-zinc-700">
          <Heading level={2}>–°–ø–∏—Å–æ–∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π</Heading>
          <Text className="text-sm text-zinc-500 mt-1">
            –ü–æ–∫–∞–∑–∞–Ω–æ {bookings.length} –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
          </Text>
        </div>
        
        {bookingsLoading ? (
          <div className="p-6 text-center">
            <Text>–ó–∞–≥—Ä—É–∑–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π...</Text>
          </div>
        ) : bookings.length === 0 ? (
          <div className="p-6 text-center">
            <Text className="text-zinc-500">–ù–µ—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π</Text>
          </div>
        ) : (
          <Table striped>
            <TableHead>
              <tr>
                <TableHeader>–ì–æ—Å—Ç—å</TableHeader>
                <TableHeader>–û–±—ä–µ–∫—Ç</TableHeader>
                <TableHeader>–î–∞—Ç—ã</TableHeader>
                <TableHeader>–ì–æ—Å—Ç–∏</TableHeader>
                <TableHeader>–°—Ç–∞—Ç—É—Å</TableHeader>
                <TableHeader>–°—É–º–º–∞</TableHeader>
                <TableHeader>–î–µ–π—Å—Ç–≤–∏—è</TableHeader>
              </tr>
            </TableHead>
            <TableBody>
              {bookings.map((booking) => (
                <TableRow key={booking.id}>
                  <TableCell>
                    <div>
                      <Text className="font-medium">{booking.guest.name}</Text>
                      <Text className="text-sm text-zinc-500">{booking.guest.email}</Text>
                    </div>
                  </TableCell>
                  <TableCell>
                    <div>
                      <Text className="font-medium">{booking.unit.name}</Text>
                      <Text className="text-sm text-zinc-500">{booking.unit.property.title}</Text>
                    </div>
                  </TableCell>
                  <TableCell>
                    <div className="space-y-1">
                      <div className="flex items-center gap-2">
                        <Text className="text-sm font-medium">
                          {new Date(booking.checkIn).toLocaleDateString('ru-RU', {
                            day: '2-digit',
                            month: '2-digit',
                            year: 'numeric'
                          })}
                        </Text>
                        <Text className="text-xs text-zinc-400">–∑–∞–µ–∑–¥</Text>
                      </div>
                      <div className="flex items-center gap-2">
                        <Text className="text-sm font-medium">
                          {new Date(booking.checkOut).toLocaleDateString('ru-RU', {
                            day: '2-digit',
                            month: '2-digit',
                            year: 'numeric'
                          })}
                        </Text>
                        <Text className="text-xs text-zinc-400">–≤—ã–µ–∑–¥</Text>
                      </div>
                    </div>
                  </TableCell>
                  <TableCell>
                    <Text>{booking.guestsCount}</Text>
                  </TableCell>
                  <TableCell>
                    <Badge color={getStatusColor(booking.status) as any}>
                      {getStatusLabel(booking.status)}
                    </Badge>
                  </TableCell>
                  <TableCell>
                    <Text className="font-medium">
                      {formatMoney(booking.priceBreakdown.total.amount, booking.priceBreakdown.total.currency)}
                    </Text>
                  </TableCell>
                  <TableCell>
                    {booking.status === 'PENDING' && (
                      <Button
                        onClick={() => cancelBookingMutation.mutate({ id: booking.id, reason: '–û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º' })}
                      >
                        –û—Ç–º–µ–Ω–∏—Ç—å
                      </Button>
                    )}
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        )}
      </div>

      {/* –î–∏–∞–ª–æ–≥ —Å–æ–∑–¥–∞–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è */}
      <Dialog open={showCreateDialog} onClose={() => setShowCreateDialog(false)} size="2xl">
        <div className="space-y-6">
          <Heading level={2}>–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ</Heading>
          
          <form onSubmit={handleCreateBooking} className="space-y-6">
            <Fieldset>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <Field>
                  <Label>–û–±—ä–µ–∫—Ç –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏</Label>
                  <Select
                    value={selectedProperty}
                    onChange={(e) => {
                      setSelectedProperty(e.target.value)
                      setSelectedUnit('')
                    }}
                    required
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç</option>
                    {properties.map((property) => (
                      <option key={property?.id} value={property?.id}>
                        {property?.title}
                      </option>
                    ))}
                  </Select>
                </Field>

                <Field>
                  <Label>–ï–¥–∏–Ω–∏—Ü–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏</Label>
                  <Select
                    value={selectedUnit}
                    onChange={(e) => setSelectedUnit(e.target.value)}
                    required
                    disabled={!selectedProperty || unitsLoading}
                  >
                    <option value="">
                      {!selectedProperty 
                        ? "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç" 
                        : unitsLoading 
                          ? "–ó–∞–≥—Ä—É–∑–∫–∞ –µ–¥–∏–Ω–∏—Ü..." 
                          : "–í—ã–±–µ—Ä–∏—Ç–µ –µ–¥–∏–Ω–∏—Ü—É"
                      }
                    </option>
                    {units.map((unit: any) => (
                      <option key={unit.id} value={unit.id}>
                        {unit.name} (–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: {unit.capacity})
                      </option>
                    ))}
                  </Select>
                  {selectedProperty && !unitsLoading && units.length === 0 && (
                    <Text className="text-sm text-orange-600 mt-1">
                      –í –≤—ã–±—Ä–∞–Ω–Ω–æ–º –æ–±—ä–µ–∫—Ç–µ –Ω–µ—Ç –µ–¥–∏–Ω–∏—Ü –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
                    </Text>
                  )}
                  {unitsError && (
                    <Text className="text-sm text-red-600 mt-1">
                      –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –µ–¥–∏–Ω–∏—Ü: {unitsError.message}
                    </Text>
                  )}
                </Field>
              </div>
            </Fieldset>

            <Fieldset>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <Field>
                  <Label>–ò–º—è –≥–æ—Å—Ç—è</Label>
                  <Input
                    value={createFormData.guestName}
                    onChange={(e) => setCreateFormData(prev => ({ ...prev, guestName: e.target.value }))}
                    required
                  />
                </Field>

                <Field>
                  <Label>Email –≥–æ—Å—Ç—è</Label>
                  <Input
                    type="email"
                    value={createFormData.guestEmail}
                    onChange={(e) => setCreateFormData(prev => ({ ...prev, guestEmail: e.target.value }))}
                    required
                  />
                </Field>
              </div>

              <Field>
                <Label>–¢–µ–ª–µ—Ñ–æ–Ω –≥–æ—Å—Ç—è</Label>
                <Input
                  type="tel"
                  value={createFormData.guestPhone}
                  onChange={(e) => setCreateFormData(prev => ({ ...prev, guestPhone: e.target.value }))}
                />
              </Field>
            </Fieldset>

            <Fieldset>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <Field>
                  <Label>–î–∞—Ç–∞ –∑–∞–µ–∑–¥–∞</Label>
                  <Input
                    type="date"
                    value={createFormData.checkIn}
                    onChange={(e) => setCreateFormData(prev => ({ ...prev, checkIn: e.target.value }))}
                    required
                  />
                </Field>

                <Field>
                  <Label>–î–∞—Ç–∞ –≤—ã–µ–∑–¥–∞</Label>
                  <Input
                    type="date"
                    value={createFormData.checkOut}
                    onChange={(e) => setCreateFormData(prev => ({ ...prev, checkOut: e.target.value }))}
                    required
                  />
                </Field>

                <Field>
                  <Label>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π</Label>
                  <Input
                    type="number"
                    min="1"
                    value={createFormData.guestsCount}
                    onChange={(e) => setCreateFormData(prev => ({ ...prev, guestsCount: parseInt(e.target.value) || 1 }))}
                    required
                  />
                </Field>
              </div>
            </Fieldset>

            <Fieldset>
              <Field>
                <Label>–ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å (—Ä—É–±.)</Label>
                <Input
                  type="number"
                  min="0"
                  step="100"
                  value={createFormData.basePrice}
                  onChange={(e) => setCreateFormData(prev => ({ ...prev, basePrice: parseFloat(e.target.value) || 0 }))}
                  required
                />
              </Field>

              <Field>
                <Label>–ó–∞–º–µ—Ç–∫–∏</Label>
                <Textarea
                  value={createFormData.notes}
                  onChange={(e) => setCreateFormData(prev => ({ ...prev, notes: e.target.value }))}
                  rows={3}
                />
              </Field>
            </Fieldset>

            {createBookingMutation.error && (
              <div className="bg-red-50 border border-red-200 rounded-md p-4">
                <Text className="text-red-800">
                  –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {createBookingMutation.error?.message}
                </Text>
              </div>
            )}

            <div className="flex justify-end gap-3 pt-4">
              <Button
                type="button"
                onClick={() => setShowCreateDialog(false)}
              >
                –û—Ç–º–µ–Ω–∞
              </Button>
              <Button
                type="submit"
                disabled={createBookingMutation.isPending}
              >
                {createBookingMutation.isPending ? '–°–æ–∑–¥–∞–Ω–∏–µ...' : '–°–æ–∑–¥–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ'}
              </Button>
            </div>
          </form>
        </div>
      </Dialog>
    </div>
  )
}
