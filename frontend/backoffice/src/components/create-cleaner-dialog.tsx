'use client'

import { useState } from 'react'
import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query'
import { Dialog, DialogTitle, DialogDescription, DialogBody, DialogActions } from './dialog'
import { Button } from './button'
import { Heading } from './heading'
import { Text } from './text'
import { Select } from './select'
import { graphqlClient } from '@/lib/graphql-client'
import { CREATE_CLEANER, GET_USERS } from '@/lib/graphql-queries'

interface CreateCleanerDialogProps {
  isOpen: boolean
  onClose: () => void
  orgId: string
}

export function CreateCleanerDialog({
  isOpen,
  onClose,
  orgId
}: CreateCleanerDialogProps) {
  const [selectedUserId, setSelectedUserId] = useState('')
  
  const queryClient = useQueryClient()

  // –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
  const { data: usersData, isLoading: usersLoading } = useQuery<any>({
    queryKey: ['users'],
    queryFn: () => graphqlClient.request(GET_USERS, {
      first: 100
    }),
    enabled: isOpen
  })

  // –ú—É—Ç–∞—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–±–æ—Ä—â–∏–∫–∞
  const createCleanerMutation = useMutation({
    mutationFn: (input: any) => graphqlClient.request(CREATE_CLEANER, { input }),
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ['cleaners'] })
      handleClose()
    },
    onError: (error: any) => {
      alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —É–±–æ—Ä—â–∏–∫–∞: ${error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`)
    }
  })

  const handleClose = () => {
    setSelectedUserId('')
    onClose()
  }

  const handleCreate = async () => {
    if (!selectedUserId) {
      alert('–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–∏—Å—Ç–µ–º—ã')
      return
    }

    const input = {
      userId: selectedUserId,
      orgId,
    }

    createCleanerMutation.mutate(input)
  }

  const users = usersData?.users?.edges?.map((edge: any) => edge.node) || []
  const selectedUser = users.find((u: any) => u.id === selectedUserId)

  return (
    <Dialog open={isOpen} onClose={handleClose} size="2xl">
      <DialogTitle>–°–æ–∑–¥–∞—Ç—å —É–±–æ—Ä—â–∏–∫–∞</DialogTitle>
      <DialogDescription>
        –î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤–æ–≥–æ —É–±–æ—Ä—â–∏–∫–∞ –≤ —Å–∏—Å—Ç–µ–º—É. –£–±–æ—Ä—â–∏–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–≤—è–∑–∞–Ω —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
      </DialogDescription>
      <DialogBody className="space-y-6">
        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–ª–æ–∫ */}
        <div className="bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg">
          <Heading level={4} className="text-blue-900 dark:text-blue-100 mb-2">
            ‚ÑπÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —É–±–æ—Ä—â–∏–∫–∞
          </Heading>
          <Text className="text-sm text-blue-800 dark:text-blue-200">
            –ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–∏—Å—Ç–µ–º—ã. –í—Å–µ –¥–∞–Ω–Ω—ã–µ (–∏–º—è, email) –±—É–¥—É—Ç –≤–∑—è—Ç—ã 
            –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –∏ –µ–º—É –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Ä–æ–ª—å <strong>CLEANER</strong>.
          </Text>
        </div>

        {/* –í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
        <div>
          <label className="block text-sm font-medium mb-2">
            –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <span className="text-red-500">*</span>
          </label>
          <Select
            value={selectedUserId}
            onChange={(e) => setSelectedUserId(e.target.value)}
            className="w-full"
            disabled={usersLoading}
          >
            <option value="">
              {usersLoading ? '–ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...' : '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'}
            </option>
            {users.map((user: any) => (
              <option key={user.id} value={user.id}>
                {user.name || user.email || user.id}
              </option>
            ))}
          </Select>
          {!usersLoading && users.length === 0 && (
            <Text className="text-sm text-yellow-600 dark:text-yellow-400 mt-2">
              ‚ö†Ô∏è –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ IAM (/iam)
            </Text>
          )}
        </div>

        {/* –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
        {selectedUser && (
          <div className="bg-green-50 dark:bg-green-900/20 p-4 rounded-lg border border-green-200 dark:border-green-700">
            <Heading level={4} className="text-green-900 dark:text-green-100 mb-3">
              ‚úÖ –í—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            </Heading>
            <div className="space-y-2 text-sm">
              <div className="flex items-start gap-2">
                <span className="text-gray-500 dark:text-gray-400 min-w-[80px]">–ò–º—è:</span>
                <span className="font-medium text-gray-900 dark:text-white">
                  {selectedUser.name || '(–Ω–µ —É–∫–∞–∑–∞–Ω–æ)'}
                </span>
              </div>
              <div className="flex items-start gap-2">
                <span className="text-gray-500 dark:text-gray-400 min-w-[80px]">Email:</span>
                <span className="font-medium text-gray-900 dark:text-white">
                  {selectedUser.email}
                </span>
              </div>
              <div className="flex items-start gap-2">
                <span className="text-gray-500 dark:text-gray-400 min-w-[80px]">–†–æ–ª–∏:</span>
                <span className="font-medium text-gray-900 dark:text-white">
                  {selectedUser.systemRoles?.join(', ') || 'USER'}
                </span>
              </div>
            </div>
            <div className="mt-3 pt-3 border-t border-green-200 dark:border-green-700">
              <Text className="text-xs text-green-700 dark:text-green-300">
                –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Ä–æ–ª—å <strong>CLEANER</strong>
              </Text>
            </div>
          </div>
        )}

        {/* –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ */}
        <div className="bg-gray-50 dark:bg-zinc-800 p-4 rounded-lg">
          <Text className="text-sm text-gray-700 dark:text-gray-300">
            <strong>üìù –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç:</strong>
          </Text>
          <ul className="mt-2 space-y-1 text-sm text-gray-600 dark:text-gray-400">
            <li>‚Ä¢ –°–æ–∑–¥–∞–µ—Ç—Å—è –∑–∞–ø–∏—Å—å Cleaner —Å —Ç–∏–ø–æ–º INTERNAL</li>
            <li>‚Ä¢ –ò–º—è –∏ email –±–µ—Ä—É—Ç—Å—è –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è User</li>
            <li>‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Ä–æ–ª—å CLEANER</li>
            <li>‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –±–µ—Ä—É—Ç—Å—è –∏–∑ UserNotificationSettings</li>
          </ul>
        </div>
      </DialogBody>
      <DialogActions>
        <Button 
          onClick={handleClose}
          className="bg-gray-100 hover:bg-gray-200 text-gray-700 border-gray-300 dark:bg-zinc-700 dark:hover:bg-zinc-600 dark:text-gray-300 dark:border-zinc-600"
        >
          –û—Ç–º–µ–Ω–∞
        </Button>
        <Button 
          onClick={handleCreate}
          disabled={createCleanerMutation.isPending}
          className="bg-black hover:bg-gray-800 text-white border-gray-600"
        >
          {createCleanerMutation.isPending ? '–°–æ–∑–¥–∞–Ω–∏–µ...' : '–°–æ–∑–¥–∞—Ç—å —É–±–æ—Ä—â–∏–∫–∞'}
        </Button>
      </DialogActions>
    </Dialog>
  )
}

