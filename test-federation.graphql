# Тестовые запросы для проверки работы объединенной схемы

# 1. Проверка базовых типов из identity-subgraph
query TestIdentitySubgraph {
  user(id: "test-user-id") {
    id
    email
    name
    createdAt
    updatedAt
  }
  
  organization(id: "test-org-id") {
    id
    name
    timezone
    currency
    createdAt
    updatedAt
  }
}

# 2. Проверка типов из bookings-subgraph
query TestBookingsSubgraph {
  booking(id: "test-booking-id") {
    id
    status
    checkIn
    checkOut
    guestsCount
    guest {
      id
      name
      email
    }
    unit {
      id
      name
      capacity
    }
  }
  
  bookings(orgId: "test-org-id") {
    edges {
      node {
        id
        status
        checkIn
        checkOut
      }
    }
    pageInfo {
      hasNextPage
      hasPreviousPage
    }
  }
}

# 3. Проверка типов из billing-subgraph
query TestBillingSubgraph {
  invoice(id: "test-invoice-id") {
    id
    total {
      amount
      currency
    }
    status
    issuedAt
    items {
      name
      qty
      price {
        amount
        currency
      }
    }
  }
  
  invoices(orgId: "test-org-id") {
    edges {
      node {
        id
        total {
          amount
          currency
        }
        status
      }
    }
    pageInfo {
      hasNextPage
    }
  }
}

# 4. Проверка типов из ai-subgraph
query TestAISubgraph {
  # AI команды не имеют Query, только Mutation
}

# 5. Тест объединенной схемы с расширениями
query TestFederatedSchema {
  # Получение пользователя с его организациями
  user(id: "test-user-id") {
    id
    email
    name
    
    # Расширение: организации пользователя
    organizations {
      id
      name
      timezone
      currency
      
      # Расширение: бронирования организации
      bookings {
        id
        status
        checkIn
        checkOut
        guest {
          id
          name
          email
        }
      }
      
      # Расширение: счета организации
      invoices {
        id
        total {
          amount
          currency
        }
        status
        issuedAt
      }
    }
  }
  
  # Получение организации с связанными данными
  organization(id: "test-org-id") {
    id
    name
    timezone
    currency
    
    # Расширение: бронирования организации
    bookings {
      id
      status
      checkIn
      checkOut
      guestsCount
      priceBreakdown {
        basePrice {
          amount
          currency
        }
        total {
          amount
          currency
        }
      }
    }
    
    # Расширение: счета организации
    invoices {
      id
      total {
        amount
        currency
      }
      status
      issuedAt
      items {
        name
        qty
        price {
          amount
          currency
        }
      }
    }
  }
}

# 6. Тест AI команд
mutation TestAICommand {
  aiCommand(
    orgId: "test-org-id"
    command: "Показать все бронирования за последний месяц"
    context: {
      "dateRange": "2024-01-01 to 2024-01-31"
    }
  ) {
    ok
    message
    affectedIds
    preview
  }
}
