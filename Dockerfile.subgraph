# Универсальный Dockerfile для подграфов
# Использование: docker build -f Dockerfile.subgraph --build-arg SUBGRAPH_NAME=inventory-subgraph .

ARG SUBGRAPH_NAME
FROM node:18-alpine AS base

# Устанавливаем pnpm
RUN npm install -g pnpm

# Устанавливаем рабочую директорию
WORKDIR /app

# Копируем файлы конфигурации
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY turbo.json ./

# Копируем все пакеты
COPY packages/ ./packages/
COPY apps/${SUBGRAPH_NAME}/ ./apps/${SUBGRAPH_NAME}/

# Устанавливаем зависимости
RUN pnpm install --frozen-lockfile

# Генерируем Prisma клиент
RUN pnpm generate

# Собираем приложение
RUN pnpm build --filter=${SUBGRAPH_NAME}

# Продакшн стадия
FROM node:18-alpine AS production

WORKDIR /app

# Копируем только необходимые файлы
COPY --from=base /app/node_modules ./node_modules
COPY --from=base /app/apps/${SUBGRAPH_NAME}/dist ./dist
COPY --from=base /app/apps/${SUBGRAPH_NAME}/package.json ./
COPY --from=base /app/packages ./packages

# Устанавливаем только продакшн зависимости
RUN npm install --only=production

# Открываем порт (будет переопределен в runtime)
EXPOSE 4000

# Запускаем приложение
CMD ["node", "dist/apps/${SUBGRAPH_NAME}/src/server.js"]
