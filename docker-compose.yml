services:
  # База данных PostgreSQL
  db:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: posutka
    ports: ["5432:5432"]
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Основное приложение с всеми сервисами
  app:
    build: .
    ports:
      - "4000:4000"  # Mesh Gateway
      - "4001:4001"  # Inventory Subgraph (GraphQL)
      - "4002:4002"  # Bookings Subgraph (GraphQL)
      - "4102:4102"  # Bookings Subgraph (gRPC)
      - "4003:4003"  # Ops Subgraph (GraphQL)
      - "4103:4103"  # Ops Subgraph (gRPC)
      - "4004:4004"  # Billing Subgraph (GraphQL)
      - "4005:4005"  # Identity Subgraph (GraphQL)
      - "4006:4006"  # Listings Subgraph (GraphQL)
      - "4007:4007"  # Legal Subgraph (GraphQL)
      - "4008:4008"  # AI Subgraph (GraphQL)
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/posutka
      - NODE_ENV=development
    depends_on:
      db:
        condition: service_healthy
    volumes:
      # Закомментируем volume mount, чтобы использовать файлы из Docker образа
      # - .:/app
      - /app/node_modules
    command: /app/docker-entrypoint.sh

volumes:
  dbdata: {}
