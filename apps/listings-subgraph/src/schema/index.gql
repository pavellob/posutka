# Listings Subgraph - Управление объявлениями и ценами
# Отвечает за создание объявлений, управление ценами и скидками на различных каналах продаж

# Общие типы
scalar UUID
scalar DateTime
scalar JSON

"""
Денежная сумма с валютой.
Amount хранится в копейках/центах для точности вычислений.
Пример: {amount: 150000, currency: "RUB"} = 1500.00 RUB
"""
type Money {
  """Сумма в копейках/центах (минимальная единица валюты)"""
  amount: Int!
  """Код валюты в формате ISO 4217 (RUB, USD, EUR)"""
  currency: String!
}

"""
Входные данные для денежной суммы.
Используется в мутациях для создания/обновления денежных значений.
"""
input MoneyInput {
  """Сумма в копейках/центах"""
  amount: Int!
  """Код валюты в формате ISO 4217"""
  currency: String!
}

"""
Информация о пагинации для соединений (connections).
Используется в GraphQL для реализации cursor-based пагинации.
"""
type PageInfo {
  """Есть ли следующая страница результатов"""
  hasNextPage: Boolean!
  """Есть ли предыдущая страница результатов"""
  hasPreviousPage: Boolean!
  """Курсор для начала текущей страницы"""
  startCursor: String
  """Курсор для конца текущей страницы"""
  endCursor: String
  """Общее количество элементов (опционально)"""
  totalCount: Int
}

"""
Действия с депозитом/залогом.
Используется для управления залогами при бронировании.
"""
enum DepositAction {
  """Заблокировать средства на карте гостя"""
  HOLD
  """Разблокировать заблокированные средства"""
  RELEASE
  """Списать средства с карты гостя"""
  CHARGE
  """Подтвердить списание (окончательно)"""
  CAPTURE
  """Вернуть средства гостю"""
  REFUND
}

"""
Статус транзакции в системе.
"""
enum TransactionStatus {
  """Транзакция в процессе обработки"""
  PENDING
  """Транзакция успешно завершена"""
  COMPLETED
  """Транзакция не удалась"""
  FAILED
}

"""
Каналы продаж для бронирований.
Определяет источник бронирования и платформу размещения.
"""
enum Channel {
  """Прямое бронирование через сайт/приложение"""
  DIRECT
  """Бронирование через Airbnb"""
  AIRBNB
  """Бронирование через Booking.com"""
  BOOKING_COM
  """Бронирование через Avito"""
  AVITO
  """Другие каналы продаж"""
  OTHER
}


"""
Статус объявления.
Определяет видимость и доступность объявления для бронирования.
"""
enum ListingStatus {
  """Черновик - объявление создано, но не опубликовано"""
  DRAFT
  """Опубликовано - объявление активно и доступно для бронирования"""
  PUBLISHED
  """Архивировано - объявление скрыто, но не удалено"""
  ARCHIVED
}

"""
Единица недвижимости (номер, квартира, дом и т.д.).
Ссылка на основную сущность из inventory-subgraph.
"""
type Unit {
  """Уникальный идентификатор единицы недвижимости"""
  id: UUID!
}

"""
Объявление о сдаче недвижимости в аренду.
Представляет единицу недвижимости на конкретном канале продаж с настройками ценообразования.
"""
type Listing {
  """Уникальный идентификатор объявления"""
  id: UUID!
  """Единица недвижимости, которая сдается"""
  unit: Unit!
  """Текущий статус объявления"""
  status: ListingStatus!
  """Канал продаж, на котором размещено объявление"""
  channel: Channel!
  """Базовая цена за ночь"""
  basePrice: Money!
  """Минимальное количество ночей для бронирования"""
  minNights: Int!
  """Максимальное количество ночей для бронирования (опционально)"""
  maxNights: Int
  """Внешний ID объявления на платформе (например, Airbnb listing ID)"""
  externalId: String
  """Дата и время последней синхронизации с внешней платформой"""
  lastSyncAt: DateTime
  """Список правил скидок для данного объявления"""
  discounts: [DiscountRule!]!
}

"""
Правило скидки для объявления.
Определяет условия предоставления скидки при бронировании.
"""
type DiscountRule {
  """Уникальный идентификатор правила скидки"""
  id: UUID!
  """Название правила скидки (например, "Скидка за неделю")"""
  name: String!
  """Процент скидки (от 1 до 100)"""
  percentOff: Int!
  """Минимальное количество ночей для применения скидки (опционально)"""
  minNights: Int
}


"""
Элемент списка объявлений для пагинации.
"""
type ListingEdge {
  """Объявление"""
  node: Listing!
  """Курсор для пагинации"""
  cursor: String!
}

"""
Соединение объявлений с пагинацией.
"""
type ListingConnection {
  """Список объявлений с курсорами"""
  edges: [ListingEdge!]!
  """Информация о пагинации"""
  pageInfo: PageInfo!
}

"""
Запросы для работы с объявлениями и ценами.
"""
type Query {
  """Получить объявление по ID"""
  listing(id: UUID!): Listing
  """Получить список объявлений для единицы недвижимости с пагинацией"""
  listings(unitId: UUID!, first: Int, after: String): ListingConnection!
}


"""
Входные данные для создания или обновления объявления.
"""
input UpsertListingInput {
  """ID единицы недвижимости для объявления"""
  unitId: UUID!
  """Статус объявления"""
  status: ListingStatus!
  """Канал продаж для размещения"""
  channel: Channel!
  """Базовая цена за ночь"""
  basePrice: MoneyInput!
  """Минимальное количество ночей"""
  minNights: Int!
  """Максимальное количество ночей (опционально)"""
  maxNights: Int
  """Внешний ID на платформе (опционально)"""
  externalId: String
}

"""
Входные данные для создания правила скидки.
"""
input DiscountRuleInput {
  """ID объявления, для которого создается скидка"""
  listingId: UUID!
  """Название правила скидки"""
  name: String!
  """Процент скидки (от 1 до 100)"""
  percentOff: Int!
  """Минимальное количество ночей для применения (опционально)"""
  minNights: Int
}

"""
Мутации для управления объявлениями, ценами и скидками.
"""
type Mutation {
  """Создать новое объявление или обновить существующее"""
  upsertListing(input: UpsertListingInput!): Listing!
  """Обновить ценообразование для объявления"""
  setPricing(listingId: UUID!, basePrice: MoneyInput!, minNights: Int!, maxNights: Int): Listing!
  """Добавить правило скидки к объявлению"""
  addDiscountRule(input: DiscountRuleInput!): Listing!
  """Удалить правило скидки"""
  removeDiscountRule(id: UUID!): Listing!
}
