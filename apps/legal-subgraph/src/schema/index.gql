# Legal Subgraph - Юридические документы и депозиты
# Отвечает за генерацию договоров, управление депозитами и юридическими транзакциями

# Общие типы
scalar UUID
scalar DateTime
scalar JSON

"""
Денежная сумма с валютой.
Amount хранится в копейках/центах для точности вычислений.
Пример: {amount: 150000, currency: "RUB"} = 1500.00 RUB
"""
type Money {
  """Сумма в копейках/центах (минимальная единица валюты)"""
  amount: Int!
  """Код валюты в формате ISO 4217 (RUB, USD, EUR)"""
  currency: String!
}

"""
Входные данные для денежной суммы.
Используется в мутациях для создания/обновления денежных значений.
"""
input MoneyInput {
  """Сумма в копейках/центах"""
  amount: Int!
  """Код валюты в формате ISO 4217"""
  currency: String!
}

"""
Информация о пагинации для соединений (connections).
Используется в GraphQL для реализации cursor-based пагинации.
"""
type PageInfo {
  """Есть ли следующая страница результатов"""
  hasNextPage: Boolean!
  """Есть ли предыдущая страница результатов"""
  hasPreviousPage: Boolean!
  """Курсор для начала текущей страницы"""
  startCursor: String
  """Курсор для конца текущей страницы"""
  endCursor: String
  """Общее количество элементов (опционально)"""
  totalCount: Int
}

"""
Действия с депозитом/залогом.
Используется для управления залогами при бронировании.
"""
enum DepositAction {
  """Заблокировать средства на карте гостя"""
  HOLD
  """Разблокировать заблокированные средства"""
  RELEASE
  """Списать средства с карты гостя"""
  CHARGE
  """Подтвердить списание (окончательно)"""
  CAPTURE
  """Вернуть средства гостю"""
  REFUND
}

"""
Статус транзакции в системе.
"""
enum TransactionStatus {
  """Транзакция в процессе обработки"""
  PENDING
  """Транзакция успешно завершена"""
  COMPLETED
  """Транзакция не удалась"""
  FAILED
}

"""
Каналы продаж для бронирований.
Определяет источник бронирования и платформу.
"""
enum Channel {
  """Прямое бронирование через сайт/приложение"""
  DIRECT
  """Бронирование через Airbnb"""
  AIRBNB
  """Бронирование через Booking.com"""
  BOOKING_COM
  """Бронирование через Avito"""
  AVITO
  """Другие каналы продаж"""
  OTHER
}

"""
Бронирование недвижимости.
Ссылка на основную сущность из bookings-subgraph.
"""
type Booking {
  """Уникальный идентификатор бронирования"""
  id: UUID!
}

"""
Юридический документ.
Представляет договор, соглашение или другой юридический документ, связанный с бронированием.
"""
type Document {
  """Уникальный идентификатор документа"""
  id: UUID!
  """Тип документа (например, "rental_agreement", "deposit_contract")"""
  type: String!
  """Название шаблона документа"""
  template: String!
  """Содержимое документа в текстовом формате"""
  content: String!
  """URL для скачивания документа (опционально)"""
  url: String
  """Дата и время подписания документа (опционально)"""
  signedAt: DateTime
  """Дата и время создания документа"""
  createdAt: DateTime!
  """Дата и время последнего обновления"""
  updatedAt: DateTime!
  """Дополнительные метаданные документа в формате JSON (опционально)"""
  meta: JSON
  """Связанное бронирование (опционально)"""
  booking: Booking
}

"""
Транзакция с депозитом/залогом.
Запись о действии с залогом по бронированию (блокировка, списание, возврат).
"""
type DepositTransaction {
  """Уникальный идентификатор транзакции"""
  id: UUID!
  """Бронирование, по которому производится транзакция"""
  booking: Booking!
  """Действие с депозитом"""
  action: DepositAction!
  """Сумма транзакции"""
  amount: Money!
  """Статус транзакции"""
  status: TransactionStatus!
  """Идентификатор транзакции в платежной системе (опционально)"""
  transactionId: String
  """Дополнительные заметки к транзакции (опционально)"""
  notes: String
  """Дата и время создания транзакции"""
  createdAt: DateTime!
  """Дата и время последнего обновления"""
  updatedAt: DateTime!
}

"""
Запросы для работы с юридическими документами и депозитами.
"""
type Query {
  """Получить документ по ID"""
  document(id: UUID!): Document
  """Получить транзакцию с депозитом по ID"""
  depositTx(id: UUID!): DepositTransaction
  """Получить все документы по бронированию"""
  documentsByBookingId(bookingId: UUID!): [Document!]!
  """Получить все транзакции с депозитом по бронированию"""
  depositTransactionsByBookingId(bookingId: UUID!): [DepositTransaction!]!
}


"""
Мутации для управления юридическими документами и депозитами.
"""
type Mutation {
  """Сгенерировать договор для бронирования"""
  generateContract(
    """ID бронирования, для которого генерируется договор"""
    bookingId: UUID!
    """Название шаблона договора (опционально)"""
    template: String
  ): Document!
  """Выполнить действие с депозитом по бронированию"""
  depositAction(
    """ID бронирования"""
    bookingId: UUID!
    """Действие с депозитом (HOLD, RELEASE, CHARGE, CAPTURE, REFUND)"""
    action: String!
    """Сумма для действия (опционально, не требуется для RELEASE)"""
    amount: MoneyInput
  ): DepositTransaction!
}
