import colors from 'colors';
export * from './table';
export { colors };
export declare const space = " ";
export declare const indent: string;
export declare const newline = "\n";
export declare const header: (value: string) => string;
export declare const plural: (value: unknown[]) => "" | "s";
export declare const trimEnd: (value: string) => string;
/**
 * Convert quoted text to bolded text. Quotes are stripped.
 */
export declare const boldQuotedWords: (value: string) => string;
export declare const prefixedInspect: (prefix: string) => (...values: unknown[]) => string;
export declare const inspect: (value: unknown) => string;
export declare const success: (...values: unknown[]) => string;
export declare const failure: (...values: unknown[]) => string;
export declare const info: (...values: unknown[]) => string;
export declare const warning: (...values: unknown[]) => string;
/**
 * A text builder. Its methods mutate an internal string value.
 * Useful for quickly building up content.
 */
export interface Builder {
    /**
     * When another builder is passed its value is appended _without_ a newline at the end
     * since builders already supply newlines to their content.
     */
    line: (value?: string | Builder) => Builder;
    /**
     * Add a header line.
     */
    header: (value: string) => Builder;
    /**
     * Add a "success" line.
     */
    success: (...values: unknown[]) => Builder;
    /**
     * Add a "failure" line.
     */
    failure: (...values: unknown[]) => Builder;
    /**
     * Add an "info" line.
     */
    info: (...values: unknown[]) => Builder;
    /**
     * Add a "warning" line.
     */
    warning: (...values: unknown[]) => Builder;
    /**
     * Add an indented line.
     */
    indent: (value: string) => Builder;
    /**
     * The current state of this builder.
     */
    state: BuilderState;
}
interface BuilderState {
    /**
     * The current string value of this builder.
     */
    value: string;
}
export declare const createBuilder: () => Builder;
export * as Texture from './texture';
//# sourceMappingURL=texture.d.ts.map