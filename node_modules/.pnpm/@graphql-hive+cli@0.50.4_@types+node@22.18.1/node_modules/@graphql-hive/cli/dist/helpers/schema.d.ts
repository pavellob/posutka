import { FragmentType } from '../gql';
import { SchemaWarningConnection } from '../gql/graphql';
export declare const RenderErrors_SchemaErrorConnectionFragment: import("@graphql-typed-document-node/core").TypedDocumentNode<import("../gql/graphql").RenderErrors_SchemaErrorConnectionFragmentFragment, unknown>;
export declare const renderErrors: (errors: FragmentType<typeof RenderErrors_SchemaErrorConnectionFragment>) => string;
declare const RenderChanges_SchemaChanges: import("@graphql-typed-document-node/core").TypedDocumentNode<import("../gql/graphql").RenderChanges_SchemaChangesFragment, unknown>;
export declare const renderChanges: (maskedChanges: FragmentType<typeof RenderChanges_SchemaChanges>) => string;
export declare const renderWarnings: (warnings: SchemaWarningConnection) => string;
export declare function loadSchema(file: string, options?: {
    headers?: Record<string, string>;
    method?: 'GET' | 'POST';
}): Promise<string>;
export declare function minifySchema(schema: string): string;
export {};
//# sourceMappingURL=schema.d.ts.map