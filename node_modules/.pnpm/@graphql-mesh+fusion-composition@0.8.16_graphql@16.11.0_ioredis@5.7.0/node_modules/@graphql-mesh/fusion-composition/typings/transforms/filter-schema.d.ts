import { type GraphQLFieldConfig, type GraphQLInputFieldConfig, type GraphQLNamedType } from 'graphql';
import { getDirectiveExtensions } from '@graphql-tools/utils';
import type { SubgraphTransform } from '../compose.js';
export interface FilterTransformConfig {
}
export declare function addInaccessibleDirective(directableObj: Parameters<typeof getDirectiveExtensions>[0]): void;
export interface CreateFilterTransformOpts {
    /**
     * Array of filter rules
     */
    filters?: string[];
    /**
     * Filter deprecated types
     */
    filterDeprecatedTypes?: boolean;
    /**
     * Filter deprecated fields
     */
    filterDeprecatedFields?: boolean;
    rootFieldFilter?: (typeName: string, fieldName: string) => boolean;
    typeFilter?: (type: GraphQLNamedType) => boolean;
    fieldFilter?: (typeName: string, fieldName: string, fieldConfig: GraphQLFieldConfig<any, any> | GraphQLInputFieldConfig) => boolean;
    objectFieldFilter?: (typeName: string, fieldName: string) => boolean;
    interfaceFieldFilter?: (typeName: string, fieldName: string) => boolean;
    inputObjectFieldFilter?: (typeName: string, fieldName: string) => boolean;
    argumentFilter?: (typeName: string, fieldName: string, argName: string) => boolean;
}
export declare function createFilterTransform({ filters, filterDeprecatedTypes, filterDeprecatedFields, ...programmaticFilters }: CreateFilterTransformOpts): SubgraphTransform;
