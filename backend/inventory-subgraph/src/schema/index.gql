# Inventory Subgraph - Управление недвижимостью и календарем
# Отвечает за объекты недвижимости, единицы, календарь доступности и блокировки дат

"""
Денежная сумма с валютой.
Amount хранится в копейках/центах для точности вычислений.
Пример: {amount: 150000, currency: "RUB"} = 1500.00 RUB
"""
type Money {
  """Сумма в копейках/центах (минимальная единица валюты)"""
  amount: Int!
  """Код валюты в формате ISO 4217 (RUB, USD, EUR)"""
  currency: String!
}

"""
Входные данные для денежной суммы.
Используется в мутациях для создания/обновления денежных значений.
"""
input MoneyInput {
  """Сумма в копейках/центах"""
  amount: Int!
  """Код валюты в формате ISO 4217"""
  currency: String!
}

"""
Информация о пагинации для соединений (connections).
Используется в GraphQL для реализации cursor-based пагинации.
"""
type PageInfo {
  """Есть ли следующая страница результатов"""
  hasNextPage: Boolean!
  """Есть ли предыдущая страница результатов"""
  hasPreviousPage: Boolean!
  """Курсор для начала текущей страницы"""
  startCursor: String
  """Курсор для конца текущей страницы"""
  endCursor: String
  """Общее количество элементов (опционально)"""
  totalCount: Int
}

"""
Действия с депозитом/залогом.
Используется для управления залогами при бронировании.
"""
enum DepositAction {
  """Заблокировать средства на карте гостя"""
  HOLD
  """Разблокировать заблокированные средства"""
  RELEASE
  """Списать средства с карты гостя"""
  CHARGE
  """Подтвердить списание (окончательно)"""
  CAPTURE
  """Вернуть средства гостю"""
  REFUND
}

"""
Статус транзакции в системе.
"""
enum TransactionStatus {
  """Транзакция в процессе обработки"""
  PENDING
  """Транзакция успешно завершена"""
  COMPLETED
  """Транзакция не удалась"""
  FAILED
}

"""
Каналы продаж для бронирований.
Определяет источник бронирования и платформу.
"""
enum Channel {
  """Прямое бронирование через сайт/приложение"""
  DIRECT
  """Бронирование через Airbnb"""
  AIRBNB
  """Бронирование через Booking.com"""
  BOOKING_COM
  """Бронирование через Avito"""
  AVITO
  """Другие каналы продаж"""
  OTHER
}


scalar UUID
scalar DateTime

"""
Запросы для работы с недвижимостью и календарем.
"""
type Query {
  """Получить объект недвижимости по ID"""
  property(id: UUID!): Property
  """Получить единицу недвижимости по ID"""
  unit(id: UUID!): Unit
  """Получить все объекты недвижимости организации"""
  propertiesByOrgId(orgId: UUID!): [Property]!
  """Получить все единицы недвижимости в объекте"""
  unitsByPropertyId(propertyId: UUID!): [Unit!]!
}

"""
Мутации для управления недвижимостью и календарем.
"""
type Mutation {
  """Создать новый объект недвижимости"""
  createProperty(
    orgId: String!
    title: String!
    address: String!
    amenities: [String!]
    # Яндекс.Недвижимость поля
    propertyType: String
    category: String
    dealStatus: String
    country: String
    region: String
    district: String
    localityName: String
    apartment: String
    metroName: String
    metroTimeOnFoot: Int
    metroTimeOnTransport: Int
    latitude: Float
    longitude: Float
    totalArea: Float
    livingArea: Float
    kitchenArea: Float
    rooms: Int
    roomsOffered: Int
    floor: Int
    floorsTotal: Int
    buildingType: String
    buildingYear: Int
    buildingSeries: String
    elevator: Boolean
    parking: Boolean
    security: Boolean
    concierge: Boolean
    playground: Boolean
    gym: Boolean
    balcony: Boolean
    loggia: Boolean
    airConditioning: Boolean
    internet: Boolean
    washingMachine: Boolean
    dishwasher: Boolean
    tv: Boolean
    renovation: String
    furniture: Boolean
    isElite: Boolean
    yandexBuildingId: String
    yandexHouseId: String
  ): Property!
  """Обновить объект недвижимости"""
  updateProperty(
    id: UUID!
    title: String!
    address: String!
    propertyType: String
    category: String
    dealStatus: String
    country: String
    region: String
    district: String
    localityName: String
    apartment: String
    metroName: String
    metroTimeOnFoot: Int
    metroTimeOnTransport: Int
    latitude: Float
    longitude: Float
    totalArea: Float
    livingArea: Float
    kitchenArea: Float
    rooms: Int
    roomsOffered: Int
    floor: Int
    floorsTotal: Int
    buildingType: String
    buildingYear: Int
    buildingSeries: String
    elevator: Boolean
    parking: Boolean
    security: Boolean
    concierge: Boolean
    playground: Boolean
    gym: Boolean
    balcony: Boolean
    loggia: Boolean
    airConditioning: Boolean
    internet: Boolean
    washingMachine: Boolean
    dishwasher: Boolean
    tv: Boolean
    renovation: String
    furniture: Boolean
    isElite: Boolean
    yandexBuildingId: String
    yandexHouseId: String
  ): Property!
  """Создать новую единицу недвижимости в объекте"""
  createUnit(propertyId: UUID!, name: String!, capacity: Int!, beds: Int!, bathrooms: Int!, amenities: [String!]): Unit!
  """Заблокировать даты в календаре единицы недвижимости"""
  blockDates(unitId: UUID!, from: DateTime!, to: DateTime!, note: String): [CalendarDay!]!
}

"""
Организация (компания, отель, хостел и т.д.).
Ссылка на основную сущность из identity-subgraph.
"""
type Organization {
  """Уникальный идентификатор организации"""
  id: UUID!
}

"""
Объект недвижимости (здание, комплекс, отель и т.д.).
Представляет физическое здание или комплекс, содержащий несколько единиц недвижимости.
Соответствует формату Яндекс.Недвижимости.
"""
type Property {
  """Уникальный идентификатор объекта недвижимости"""
  id: UUID!
  """Организация, владеющая объектом"""
  org: Organization!
  """Название объекта недвижимости"""
  title: String!
  """Адрес объекта недвижимости"""
  address: String!
  """Список удобств объекта (WiFi, парковка, бассейн и т.д.)"""
  amenities: [String!]!
  """Список единиц недвижимости в объекте"""
  units: [Unit]!
  
  # Яндекс.Недвижимость поля
  
  """Тип недвижимости (жилая/коммерческая)"""
  propertyType: String
  """Категория объекта (квартира/комната/дом/гараж)"""
  category: String
  """Статус сделки (первичная продажа/вторичка/аренда)"""
  dealStatus: String
  
  # Локация
  """Страна"""
  country: String
  """Регион/область"""
  region: String
  """Район"""
  district: String
  """Город/населенный пункт"""
  localityName: String
  """Номер квартиры"""
  apartment: String
  
  # Метро
  """Название станции метро"""
  metroName: String
  """Время до метро пешком (минуты)"""
  metroTimeOnFoot: Int
  """Время до метро на транспорте (минуты)"""
  metroTimeOnTransport: Int
  
  # Координаты
  """Широта"""
  latitude: Float
  """Долгота"""
  longitude: Float
  
  # Площадь и характеристики
  """Общая площадь (кв.м)"""
  totalArea: Float
  """Жилая площадь (кв.м)"""
  livingArea: Float
  """Площадь кухни (кв.м)"""
  kitchenArea: Float
  """Количество комнат"""
  rooms: Int
  """Количество комнат к сдаче"""
  roomsOffered: Int
  """Этаж"""
  floor: Int
  """Общее количество этажей"""
  floorsTotal: Int
  
  # Тип здания
  """Материал стен (кирпичный/панельный/монолитный)"""
  buildingType: String
  """Год постройки"""
  buildingYear: Int
  """Серия здания"""
  buildingSeries: String
  
  # Удобства здания
  """Наличие лифта"""
  elevator: Boolean
  """Наличие парковки"""
  parking: Boolean
  """Наличие охраны"""
  security: Boolean
  """Наличие консьержа"""
  concierge: Boolean
  """Наличие детской площадки"""
  playground: Boolean
  """Наличие спортзала"""
  gym: Boolean
  
  # Удобства квартиры
  """Наличие балкона"""
  balcony: Boolean
  """Наличие лоджии"""
  loggia: Boolean
  """Наличие кондиционера"""
  airConditioning: Boolean
  """Наличие интернета"""
  internet: Boolean
  """Наличие стиральной машины"""
  washingMachine: Boolean
  """Наличие посудомоечной машины"""
  dishwasher: Boolean
  """Наличие телевизора"""
  tv: Boolean
  
  # Состояние
  """Состояние ремонта"""
  renovation: String
  """Наличие мебели"""
  furniture: Boolean
  
  # Элитная недвижимость
  """Элитная недвижимость"""
  isElite: Boolean
  
  # Внешние ID
  """ID здания в Яндекс.Недвижимости"""
  yandexBuildingId: String
  """ID дома в Яндекс.Недвижимости"""
  yandexHouseId: String
  
  # Метаданные
  """Дата создания объекта"""
  createdAt: DateTime!
  """Дата последнего обновления объекта"""
  updatedAt: DateTime!
}

"""
Единица недвижимости (номер, квартира, дом и т.д.).
Представляет отдельную сдаваемую в аренду единицу в объекте недвижимости.
"""
type Unit {
  """Уникальный идентификатор единицы недвижимости"""
  id: UUID!
  """Объект недвижимости, к которому относится единица"""
  property: Property!
  """Название единицы (например, "Номер 101", "Квартира 2А")"""
  name: String!
  """Максимальная вместимость (количество гостей)"""
  capacity: Int!
  """Количество кроватей"""
  beds: Int!
  """Количество ванных комнат"""
  bathrooms: Int!
  """Список удобств единицы (кондиционер, кухня, балкон и т.д.)"""
  amenities: [String!]!
  """Календарь доступности единицы на указанный период"""
  calendar(rangeStart: DateTime!, rangeEnd: DateTime!): [CalendarDay!]!
}

"""
Статус доступности единицы недвижимости.
Определяет, можно ли забронировать единицу на конкретную дату.
"""
enum AvailabilityStatus {
  """Доступна для бронирования"""
  AVAILABLE
  """Заблокирована (недоступна для бронирования)"""
  BLOCKED
  """Забронирована"""
  BOOKED
}

"""
День в календаре единицы недвижимости.
Представляет статус доступности единицы на конкретную дату.
"""
type CalendarDay {
  """Дата в календаре"""
  date: DateTime!
  """Статус доступности на эту дату"""
  status: AvailabilityStatus!
  """ID бронирования, если единица забронирована (опционально)"""
  bookingId: UUID
  """Дополнительная заметка о статусе (опционально)"""
  note: String
}
