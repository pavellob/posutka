# Inventory Subgraph - Управление недвижимостью и календарем
# Отвечает за объекты недвижимости, единицы, календарь доступности и блокировки дат

"""
Денежная сумма с валютой.
Amount хранится в копейках/центах для точности вычислений.
Пример: {amount: 150000, currency: "RUB"} = 1500.00 RUB
"""
type Money {
  """Сумма в копейках/центах (минимальная единица валюты)"""
  amount: Int!
  """Код валюты в формате ISO 4217 (RUB, USD, EUR)"""
  currency: String!
}

"""
Входные данные для денежной суммы.
Используется в мутациях для создания/обновления денежных значений.
"""
input MoneyInput {
  """Сумма в копейках/центах"""
  amount: Int!
  """Код валюты в формате ISO 4217"""
  currency: String!
}

"""
Информация о пагинации для соединений (connections).
Используется в GraphQL для реализации cursor-based пагинации.
"""
type PageInfo {
  """Есть ли следующая страница результатов"""
  hasNextPage: Boolean!
  """Есть ли предыдущая страница результатов"""
  hasPreviousPage: Boolean!
  """Курсор для начала текущей страницы"""
  startCursor: String
  """Курсор для конца текущей страницы"""
  endCursor: String
  """Общее количество элементов (опционально)"""
  totalCount: Int
}

"""
Действия с депозитом/залогом.
Используется для управления залогами при бронировании.
"""
enum DepositAction {
  """Заблокировать средства на карте гостя"""
  HOLD
  """Разблокировать заблокированные средства"""
  RELEASE
  """Списать средства с карты гостя"""
  CHARGE
  """Подтвердить списание (окончательно)"""
  CAPTURE
  """Вернуть средства гостю"""
  REFUND
}

"""
Статус транзакции в системе.
"""
enum TransactionStatus {
  """Транзакция в процессе обработки"""
  PENDING
  """Транзакция успешно завершена"""
  COMPLETED
  """Транзакция не удалась"""
  FAILED
}

"""
Каналы продаж для бронирований.
Определяет источник бронирования и платформу.
"""
enum Channel {
  """Прямое бронирование через сайт/приложение"""
  DIRECT
  """Бронирование через Airbnb"""
  AIRBNB
  """Бронирование через Booking.com"""
  BOOKING_COM
  """Бронирование через Avito"""
  AVITO
  """Другие каналы продаж"""
  OTHER
}


scalar UUID
scalar DateTime

"""
Запросы для работы с недвижимостью и календарем.
"""
type Query {
  """Получить объект недвижимости по ID"""
  property(id: UUID!): Property
  """Получить единицу недвижимости по ID"""
  unit(id: UUID!): Unit
  """Получить все объекты недвижимости организации"""
  propertiesByOrgId(orgId: UUID!): [Property]!
  """Получить все единицы недвижимости в объекте"""
  unitsByPropertyId(propertyId: UUID!): [Unit!]!
}

"""
Мутации для управления недвижимостью и календарем.
"""
type Mutation {
  """Создать новый объект недвижимости"""
  createProperty(orgId: UUID!, title: String!, address: String!, amenities: [String!]): Property!
  """Создать новую единицу недвижимости в объекте"""
  createUnit(propertyId: UUID!, name: String!, capacity: Int!, beds: Int!, bathrooms: Int!, amenities: [String!]): Unit!
  """Заблокировать даты в календаре единицы недвижимости"""
  blockDates(unitId: UUID!, from: DateTime!, to: DateTime!, note: String): [CalendarDay!]!
}

"""
Организация (компания, отель, хостел и т.д.).
Ссылка на основную сущность из identity-subgraph.
"""
type Organization {
  """Уникальный идентификатор организации"""
  id: UUID!
}

"""
Объект недвижимости (здание, комплекс, отель и т.д.).
Представляет физическое здание или комплекс, содержащий несколько единиц недвижимости.
"""
type Property {
  """Уникальный идентификатор объекта недвижимости"""
  id: UUID!
  """Организация, владеющая объектом"""
  org: Organization!
  """Название объекта недвижимости"""
  title: String!
  """Адрес объекта недвижимости"""
  address: String!
  """Список удобств объекта (WiFi, парковка, бассейн и т.д.)"""
  amenities: [String!]!
  """Список единиц недвижимости в объекте"""
  units: [Unit]!
}

"""
Единица недвижимости (номер, квартира, дом и т.д.).
Представляет отдельную сдаваемую в аренду единицу в объекте недвижимости.
"""
type Unit {
  """Уникальный идентификатор единицы недвижимости"""
  id: UUID!
  """Объект недвижимости, к которому относится единица"""
  property: Property!
  """Название единицы (например, "Номер 101", "Квартира 2А")"""
  name: String!
  """Максимальная вместимость (количество гостей)"""
  capacity: Int!
  """Количество кроватей"""
  beds: Int!
  """Количество ванных комнат"""
  bathrooms: Int!
  """Список удобств единицы (кондиционер, кухня, балкон и т.д.)"""
  amenities: [String!]!
  """Календарь доступности единицы на указанный период"""
  calendar(rangeStart: DateTime!, rangeEnd: DateTime!): [CalendarDay!]!
}

"""
Статус доступности единицы недвижимости.
Определяет, можно ли забронировать единицу на конкретную дату.
"""
enum AvailabilityStatus {
  """Доступна для бронирования"""
  AVAILABLE
  """Заблокирована (недоступна для бронирования)"""
  BLOCKED
  """Забронирована"""
  BOOKED
}

"""
День в календаре единицы недвижимости.
Представляет статус доступности единицы на конкретную дату.
"""
type CalendarDay {
  """Дата в календаре"""
  date: DateTime!
  """Статус доступности на эту дату"""
  status: AvailabilityStatus!
  """ID бронирования, если единица забронирована (опционально)"""
  bookingId: UUID
  """Дополнительная заметка о статусе (опционально)"""
  note: String
}
