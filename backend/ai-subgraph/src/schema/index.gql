# AI Subgraph - Искусственный интеллект и автоматизация
# Отвечает за обработку естественного языка, автоматизацию задач и AI-команды

# Общие типы
scalar UUID
scalar DateTime
scalar JSON

"""
Организация (компания, отель, хостел и т.д.).
Ссылка на основную сущность из identity-subgraph.
"""
type Organization {
  """Уникальный идентификатор организации"""
  id: UUID!
}

"""
Результат выполнения AI-команды.
Содержит информацию об успешности выполнения и затронутых сущностях.
"""
type AICommandResult {
  """Успешно ли выполнена команда"""
  ok: Boolean!
  """Сообщение о результате выполнения (опционально)"""
  message: String
  """Список ID сущностей, которые были затронуты командой"""
  affectedIds: [UUID!]!
  """Предварительный просмотр изменений в формате JSON (опционально)"""
  preview: JSON
}

"""
Результат генерации GraphQL запроса из естественного языка.
"""
type GraphQLQueryResult {
  """Сгенерированный GraphQL запрос"""
  query: String!
  """Переменные для запроса"""
  variables: JSON
  """Описание того, что делает запрос"""
  description: String
  """Успешно ли сгенерирован запрос"""
  success: Boolean!
  """Сообщение об ошибке (если есть)"""
  error: String
}

"""
Настройки для AI-адаптера.
"""
input AIAdapterConfig {
  """Тип адаптера (openai, anthropic)"""
  type: String!
  """API ключ для адаптера"""
  apiKey: String!
  """Модель для использования (опционально)"""
  model: String
}

"""
Запросы для работы с AI-функциональностью.
"""
type Query {
  """Пустой запрос (требуется для GraphQL схемы)"""
  _empty: Boolean
}

"""
Мутации для выполнения AI-команд.
"""
type Mutation {
  """Выполнить AI-команду на естественном языке"""
  aiCommand(
    """ID организации, для которой выполняется команда"""
    orgId: UUID!
    """Текст команды на естественном языке"""
    command: String!
    """Дополнительный контекст в формате JSON (опционально)"""
    context: JSON
  ): AICommandResult!
  
  """Сгенерировать GraphQL запрос из естественного языка"""
  generateGraphQLQuery(
    """ID организации"""
    orgId: UUID!
    """Описание запроса на естественном языке"""
    description: String!
    """Настройки AI-адаптера"""
    adapterConfig: AIAdapterConfig!
    """Дополнительный контекст схемы (опционально)"""
    schemaContext: JSON
  ): GraphQLQueryResult!
  
  """Выполнить сгенерированный GraphQL запрос"""
  executeGeneratedQuery(
    """ID организации"""
    orgId: UUID!
    """GraphQL запрос для выполнения"""
    query: String!
    """Переменные для запроса"""
    variables: JSON
  ): JSON!
}
