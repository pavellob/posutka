/**
 * –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è AI subgraph —Å GQLPT
 */

import { AIOrchestratorService } from '../services/ai-orchestrator.service.js';
import type { AIAdapterConfig } from '@repo/datalayer';

async function simpleExample() {
  console.log('üöÄ –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è AI subgraph —Å GQLPT\n');

  // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
  const orchestrator = new AIOrchestratorService();
  const orgId = '123e4567-e89b-12d3-a456-426614174000';

  try {
    // –ü—Ä–∏–º–µ—Ä 1: –û–±—ã—á–Ω–∞—è AI –∫–æ–º–∞–Ω–¥–∞
    console.log('üìù –ü—Ä–∏–º–µ—Ä 1: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ AI –∫–æ–º–∞–Ω–¥—ã');
    const commandResult = await orchestrator.run(
      orgId,
      '–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ò–≤–∞–Ω',
      { userId: 'user-123', checkIn: '2024-01-15' }
    );
    
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–º–∞–Ω–¥—ã:', JSON.stringify(commandResult, null, 2));
    console.log('');

    // –ü—Ä–∏–º–µ—Ä 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è GraphQL –∑–∞–ø—Ä–æ—Å–∞ (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ AI)
    console.log('üìù –ü—Ä–∏–º–µ—Ä 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è GraphQL –∑–∞–ø—Ä–æ—Å–∞');
    const queryResult = await orchestrator.generateGraphQLQuery(
      orgId,
      '–ù–∞–π—Ç–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏–º–µ–Ω–µ–º "–ò–≤–∞–Ω"',
      {
        type: 'openai',
        apiKey: 'test-key',
        model: 'gpt-4'
      }
    );
    
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:', JSON.stringify(queryResult, null, 2));
    console.log('');

    // –ü—Ä–∏–º–µ—Ä 3: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
    if (queryResult.success && queryResult.query) {
      console.log('üìù –ü—Ä–∏–º–µ—Ä 3: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞');
      const executionResult = await orchestrator.executeGeneratedQuery(
        orgId,
        queryResult.query,
        queryResult.variables
      );
      
      console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:', JSON.stringify(executionResult, null, 2));
    }

    console.log('‚úÖ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–∏–º–µ—Ä–µ:', error);
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–∞
if (import.meta.url === `file://${process.argv[1]}`) {
  simpleExample().catch(console.error);
}

export { simpleExample };
