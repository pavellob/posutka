#!/bin/sh

echo "üöÄ –ó–∞–ø—É—Å–∫ Posutka Monorepo –≤ Docker..."

# –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
if [ "$(dirname "$0")" = "/app" ]; then
  # –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ /app, —Ç–æ –º—ã —É–∂–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
  cd /app || exit 1
else
  # –ò–Ω–∞—á–µ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
  cd "$(dirname "$0")/.." || exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è packages/datalayer-prisma —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -d "packages/datalayer-prisma" ]; then
  echo "‚ùå –û—à–∏–±–∫–∞: –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è packages/datalayer-prisma –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ $(pwd)"
  ls -la
  exit 1
fi

# –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
until nc -z db 5432; do
  echo "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤–∞, –∂–¥–µ–º..."
  sleep 2
done

echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞!"

# –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
echo "üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
echo "üîç DATABASE_URL –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–π: ${DATABASE_URL:0:30}..."
cd packages/datalayer-prisma && DATABASE_URL="$DATABASE_URL" pnpm prisma db push --accept-data-loss || echo "Migration failed, continuing..."

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Prisma –∫–ª–∏–µ–Ω—Ç
echo "üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Prisma –∫–ª–∏–µ–Ω—Ç–∞..."
cd packages/datalayer-prisma && DATABASE_URL="$DATABASE_URL" pnpm prisma generate

# –°–∏–¥—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã –¥–ª—è production –¥–µ–ø–ª–æ—è
# –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ –≤—Ä—É—á–Ω—É—é: pnpm seed:ts
echo "‚ÑπÔ∏è  –°–∏–¥—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤—Ä—É—á–Ω—É—é –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏."

echo "üéØ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –ª–æ–≥–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
echo "üîç Checking environment variables before starting services..."
echo "DATABASE_URL: ${DATABASE_URL:0:50}..."
echo "TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN:0:20}..."
echo "FRONTEND_URL: $FRONTEND_URL"
echo "NODE_ENV: $NODE_ENV"

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —è–≤–Ω–æ, —á—Ç–æ–±—ã –æ–Ω–∏ –ø–µ—Ä–µ–¥–∞–ª–∏—Å—å –≤ –¥–æ—á–µ—Ä–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
export DATABASE_URL
export NODE_ENV
export FRONTEND_URL
export TELEGRAM_BOT_TOKEN
export TELEGRAM_USE_MINIAPP
export TELEGRAM_POLLING
export NOTIFICATIONS_GRPC_HOST
export NOTIFICATIONS_GRPC_PORT

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Å–∞–±–≥—Ä–∞—Ñ—ã –∏ Mesh Gateway –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
npm-run-all --parallel \
  "pnpm -C backend/inventory-subgraph start" \
  "pnpm -C backend/bookings-subgraph start" \
  "pnpm -C backend/ops-subgraph start" \
  "pnpm -C backend/billing-subgraph start" \
  "pnpm -C backend/identity-subgraph start" \
  "pnpm -C backend/listings-subgraph start" \
  "pnpm -C backend/legal-subgraph start" \
  "pnpm -C backend/ai-subgraph start" \
  "pnpm -C backend/iam-subgraph start" \
  "pnpm -C backend/cleaning-subgraph start" \
  "pnpm -C backend/notifications-subgraph start" \
  "pnpm -C backend/gateway-mesh mesh:dev"
